<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="kr.or.profit.mapper.TrainerPageMapper">

	<!-- 상담 목록 조회 -->
	<select id="selectChatAccountList" parameterType="Criteria" resultType="egovMap">
	    SELECT RN, CHATTING_SEQ, CHAT_PROFILE_SEQ ,CHAT_PROFILE_ID,
		CHATTING_MEMBER_ID,CHAT_DATE, CHAT_TIME,CHATTING_ACCOUNT_FLAG
		FROM
		(
		SELECT ROWNUM AS RN, CHATTING_SEQ, CHAT_PROFILE_SEQ ,CHAT_PROFILE_ID,
		CHATTING_MEMBER_ID,CHAT_DATE, CHAT_TIME,CHATTING_ACCOUNT_FLAG
		FROM
		(
		SELECT A.CHATTING_SEQ, A.CHAT_PROFILE_SEQ, B.CHAT_PROFILE_ID,
		A.CHATTING_MEMBER_ID, TO_CHAR(A.IN_DATE, 'YYYY-MM-DD') AS CHAT_DATE, 
		TO_CHAR(A.IN_DATE, 'HH:MM:SS') AS CHAT_TIME, A.CHATTING_ACCOUNT_FLAG
		FROM CHATTING A, CHAT_PROFILE B
		WHERE
		CHAT_PROFILE_ID = #{memberId} AND
		1=1
		<if test="selDate != null and selDate !=''">
		    and TO_CHAR(A.IN_DATE, 'YYYYMM') = #{selDate}
		</if>
		AND
		A.CHAT_PROFILE_SEQ = B.CHAT_PROFILE_SEQ(+)
		ORDER BY CHAT_DATE DESC, CHAT_TIME DESC
		)
		)
		WHERE RN BETWEEN #{rowStart} AND #{rowEnd}
		
	</select>	
	
	<select id="selectChatCnt" parameterType="Criteria" resultType="int">
		SELECT COUNT(*)
		FROM CHATTING A, CHAT_PROFILE B
		WHERE
		CHAT_PROFILE_ID = #{memberId} AND
		1=1
		<if test="selDate != null and selDate !=''">
		    and TO_CHAR(A.IN_DATE, 'YYYYMM') = #{selDate}
		</if>
		AND
		A.CHAT_PROFILE_SEQ = B.CHAT_PROFILE_SEQ(+)
	
	</select>
	
	<select id="selectChartInfo" resultType="egovMap">
	    select
		(
		select count(*) 
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(sysdate,'yyyymm')
		) as nowCountM,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(sysdate,'yyyymm')
		)as nowCountF,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -1),'yyyymm')
		) as prevCount1M,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -1),'yyyymm')
		) as prevCount1F,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -2),'yyyymm')
		) as prevCount2M,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -2),'yyyymm')
		) as prevCount2F,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -3),'yyyymm')
		) as prevCount3M,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -3),'yyyymm')
		) as prevCount3F,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -4),'yyyymm')
		) as prevCount4M,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -4),'yyyymm')
		) as prevCount4F,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -5),'yyyymm')
		) as prevCount5M,
		(
		select count(*)
		from chatting a, member b, chat_profile c
		where a.chatting_member_id = b.member_id(+)
		and a.chat_profile_seq = c.chat_profile_seq
		and c.chat_profile_id = #{memberId}
		and b.member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -5),'yyyymm')
		) as prevCount5F
		from dual
	</select>
	
	<select id="selectClassAccountList" parameterType="Criteria" resultType="egovMap">
	    select *
		from
		(
		select rownum as rn , '['||d.LESSON_CATEGORY_NAME||']' || CASE
					WHEN
					LENGTH(LESSON_TITLE) > 10 THEN SUBSTR(LESSON_TITLE, 0, 10) ||
					'...'
					ELSE LESSON_TITLE
					END AS LESSON_TITLE, 
		            buy_lesson_seq, lesson_seq, lesson_refund_flag, c.in_user_id, to_char(c.in_date,'yyyy-mm-dd') as in_date,c.lesson_price, class_account_flag,trainer_id
		from
		(
		select buy_lesson_seq, a.lesson_seq, lesson_refund_flag, a.in_user_id, a.in_date, a.class_account_flag,lesson_category_seq,lesson_title,lesson_price, b.in_user_id as trainer_id
		from buy_lesson a, lesson b
		where a.lesson_seq = b.lesson_seq(+) 
		order by in_date desc
		) c , lesson_category d
		where c.lesson_category_seq = d.lesson_category_seq
		and lesson_refund_flag = 'N'
		and trainer_id = #{memberId}
		<if test="selDate != null and selDate !=''">
		    and TO_CHAR(IN_DATE, 'YYYYMM') = #{selDate}
		</if>
		)
		where rn between #{rowStart} and #{rowEnd}
		
	</select>	
	
	<select id="selectClassCnt" parameterType="Criteria" resultType="int">
		select count(*)
		from
		(
		select buy_lesson_seq, a.lesson_seq, lesson_refund_flag, a.in_user_id, a.in_date, a.class_account_flag,lesson_category_seq,lesson_title,lesson_price, b.in_user_id as trainer_id
		from buy_lesson a, lesson b
		where a.lesson_seq = b.lesson_seq(+) 
		order by in_date desc
		) c , lesson_category d
		where c.lesson_category_seq = d.lesson_category_seq
		and lesson_refund_flag = 'N'
		and trainer_id = #{memberId}
		<if test="selDate != null and selDate !=''">
		    and TO_CHAR(IN_DATE, 'YYYYMM') = #{selDate}
		</if>
	</select>
	
	<select id="selectChart2Info" resultType="egovMap">
	    select 
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(sysdate,'yyyymm')
		)as nowCountM,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(sysdate,'yyyymm')
		)as nowCountF,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -1),'yyyymm')
		)as prevCount1M,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -1),'yyyymm')
		)as prevCount1F,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -2),'yyyymm')
		)as prevCount2M,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -2),'yyyymm')
		)as prevCount2F,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -3),'yyyymm')
		)as prevCount3M,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -3),'yyyymm')
		)as prevCount3F,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -4),'yyyymm')
		)as prevCount4M,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -4),'yyyymm')
		)as prevCount4F,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='M'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -5),'yyyymm')
		)as prevCount5M,
		(
		select count(*)
		from buy_lesson a , member b, lesson c
		where a.in_user_id = b.member_id(+)
		and a.lesson_seq = c.lesson_seq(+)
		and lesson_refund_flag = 'N'
		and c.in_user_id = 't4'
		and member_gender='F'
		and to_char(a.in_date,'yyyymm') = to_char(add_months(sysdate, -5),'yyyymm')
		)as prevCount5F
		from dual
	</select>
	<select id="selectTrainerClassList"  resultType="egovMap" parameterType="Criteria">
    	select * 
		from
		(
		select rownum as rn, lesson_seq, file_seq, file_path, lesson_title, lesson_price, lesson_hit,in_user_id, up_user_id, lesson_private_flag, in_date, nvl(reply_cnt,0) as reply_cnt, nvl(good_cnt,0) as good_cnt
		from
		(
		select a.lesson_seq, a.file_seq,b.file_path,'['||c.lesson_category_name||']'||
           CASE
		WHEN
		LENGTH(LESSON_TITLE) > 10 THEN SUBSTR(LESSON_TITLE, 0, 10) ||
		'...'
		ELSE LESSON_TITLE
		END AS LESSON_TITLE,lesson_category_name,lesson_price, a.lesson_hit, a.in_user_id, a.up_user_id,lesson_private_flag, 
		to_char(a.in_date,'yyyy-mm-dd') as in_date, reply_cnt, good_cnt
		from lesson a, attach_file b, lesson_category c,
		(
		select lesson_seq,count(*) as reply_cnt
		from reply
		where lesson_seq is not null
		and reply_del_flag = 'N'
		group by lesson_seq
		) d,
		(
		select lesson_seq, count(*) as good_cnt
		from bookgood
		where lesson_seq is not null
		and bookgood_flag='Y'
		and bookgood_gubun='G'
		group by lesson_seq
		) e
		where a.file_seq = b.file_seq(+)
		and a.lesson_category_seq = c.lesson_category_seq(+)
		and a.lesson_seq = d.lesson_seq(+)
		and a.lesson_seq = e.lesson_seq(+)
		order by a.in_date desc
		)
		where in_user_id = #{memberId}
		and 1=1
		<if test="selCate != null and selCate != '' ">
		    and lesson_category_name=#{selCate}
		</if>
		<if test="keyword != null and keyword != '' ">
			and lesson_title like '%' || #{keyword} || '%'
		</if>
		<trim prefix="ORDER BY" prefixOverrides="," >
		    <choose>
		        <when test="selLev == null or selLev == ''">
					rn asc
				</when>
				<otherwise>
					<choose>
					    <when test="selLev == '조회순'">
							,to_number(lesson_hit) desc, rn asc
						</when>
						<when test="selLev == '좋아요순'">
							,to_number(reply_cnt) desc, rn asc
						</when>
						<when test="selLev == '댓글순'">
							,to_number(good_cnt) desc, rn asc				    
						</when>
					</choose>
				</otherwise>
			</choose>
		</trim>
		)
		where rn between #{rowStart} and #{rowEnd}
	</select>
	
	<select id="selectTrainerClassCnt" parameterType="Criteria" resultType="int">
		
		select count(*)
		from
		(
		select a.lesson_seq, a.file_seq,b.file_path,'['||c.lesson_category_name||']'||
           CASE
		WHEN
		LENGTH(LESSON_TITLE) > 10 THEN SUBSTR(LESSON_TITLE, 0, 10) ||
		'...'
		ELSE LESSON_TITLE
		END AS LESSON_TITLE,lesson_category_name,lesson_price, a.lesson_hit, a.in_user_id, a.up_user_id,lesson_private_flag, a.in_date, reply_cnt, good_cnt
		from lesson a, attach_file b, lesson_category c,
		(
		select lesson_seq,count(*) as reply_cnt
		from reply
		where lesson_seq is not null
		and reply_del_flag = 'N'
		group by lesson_seq
		) d,
		(
		select lesson_seq, count(*) as good_cnt
		from bookgood
		where lesson_seq is not null
		and bookgood_flag='Y'
		and bookgood_gubun='G'
		group by lesson_seq
		) e
		where a.file_seq = b.file_seq(+)
		and a.lesson_category_seq = c.lesson_category_seq(+)
		and a.lesson_seq = d.lesson_seq(+)
		and a.lesson_seq = e.lesson_seq(+)
		order by a.in_date desc
		)
		where in_user_id = #{memberId}
		and 1=1
		<if test="selCate != null and selCate != '' ">
		    and lesson_category_name=#{selCate}
		</if>
		<if test="keyword != null and keyword != '' ">
			and lesson_title like '%' || #{keyword} || '%'
		</if>
	</select>
	
	<select id="selectAdminFlag" resultType="egovmap">
		select * from member
		where member_id = #{upUserId}
	</select>
	
	<update id="updateLessonPrivate" parameterType="LessonVO">
	  update lesson
	  <trim prefix="SET" suffixOverrides=",">
      	<if test='lessonPrivateFlag == "N"'>lesson_private_flag = 'Y',</if>
      	<if test='lessonPrivateFlag == "Y"'>lesson_private_flag = 'N',</if>
   	  </trim>
   	  where lesson_seq = #{lessonSeq}
	  
	</update>
	
	<select id="selectBestClassMaleInfo" resultType="egovmap">
		<![CDATA[
	    select *
		from
		(
		select rownum as rn, lesson_seq, 
		CASE WHEN LENGTH(lesson_title) > 7 THEN SUBSTR(lesson_title, 0, 7) || '...' ELSE lesson_title END AS lesson_title, 
		cnt
		from
		(
		select a.lesson_seq, b.lesson_title,count(*) as cnt
		from buy_lesson a, lesson b, member c
		where a.lesson_seq = b.lesson_seq(+)
		and b.in_user_id = #{memberId}
		and a.in_user_id = c.member_id(+)
		and c.member_gender='M'
		group by(a.lesson_seq, b.lesson_title)
		order by cnt desc
		)
		)
		where rn <= 6
		]]>
	</select>
	
	<select id="selectBestClassFemaleInfo" resultType="egovmap">
		<![CDATA[
	    select *
		from
		(
		select rownum as rn, lesson_seq,
		CASE WHEN LENGTH(lesson_title) > 7 THEN SUBSTR(lesson_title, 0, 7) || '...' ELSE lesson_title END AS lesson_title
		, cnt
		from
		(
		select a.lesson_seq, b.lesson_title,count(*) as cnt
		from buy_lesson a, lesson b, member c
		where a.lesson_seq = b.lesson_seq(+)
		and b.in_user_id = #{memberId}
		and a.in_user_id = c.member_id(+)
		and c.member_gender='F'
		group by(a.lesson_seq, b.lesson_title)
		order by cnt desc
		)
		)
		where rn <= 6
		]]>
	</select>
	
	<select id="selectTrainer" resultType="egovmap">
	    select *
	    from member
	    where member_id = #{memberId}
	</select>
	
	<select id="selectAccountList" parameterType="hashmap" resultType="egovmap">
	    select lesson_title, lesson_price, vat, to_number(lesson_price - vat) as money ,cnt
        from
        (
		select lesson_title, lesson_price,round(to_number(lesson_price * 0.8),-2) as vat, count(*) as cnt
        from
        (
		select '['||d.LESSON_CATEGORY_NAME||']' || CASE
					WHEN
					LENGTH(LESSON_TITLE) > 10 THEN SUBSTR(LESSON_TITLE, 0, 10) ||
					'...'
					ELSE LESSON_TITLE
					END AS LESSON_TITLE, 
		            buy_lesson_seq, lesson_seq, lesson_refund_flag, c.in_user_id, to_char(c.in_date,'yyyy-mm-dd') as in_date,c.lesson_price, class_account_flag,trainer_id
		from
		(
		select buy_lesson_seq, a.lesson_seq, lesson_refund_flag, a.in_user_id, a.in_date, a.class_account_flag,lesson_category_seq,lesson_title,lesson_price, b.in_user_id as trainer_id
		from buy_lesson a, lesson b
		where a.lesson_seq = b.lesson_seq(+) 
		order by in_date desc
		) c , lesson_category d
		where c.lesson_category_seq = d.lesson_category_seq
		and lesson_refund_flag = 'N'
		and trainer_id = #{memberId}
        and TO_CHAR(IN_DATE, 'YYYYMM') = #{selDate}
		)
		group by lesson_title, lesson_price, round(to_number(lesson_price * 0.8),-2)
        )
	    
	</select>
	
	<select id="selectRemainInfo" parameterType="hashMap" resultType="egovMap">
	    select sum(vat) as vat, sum(cnt) as cnt, sum(money) as money
	    from
	    (
	    select lesson_title, lesson_price, vat, to_number(lesson_price - vat) as money ,cnt
        from
        (
		select lesson_title, lesson_price,round(to_number(lesson_price * 0.8),-2) as vat, count(*) as cnt
        from
        (
		select '['||d.LESSON_CATEGORY_NAME||']' || CASE
					WHEN
					LENGTH(LESSON_TITLE) > 10 THEN SUBSTR(LESSON_TITLE, 0, 10) ||
					'...'
					ELSE LESSON_TITLE
					END AS LESSON_TITLE, 
		            buy_lesson_seq, lesson_seq, lesson_refund_flag, c.in_user_id, to_char(c.in_date,'yyyy-mm-dd') as in_date,c.lesson_price, class_account_flag,trainer_id
		from
		(
		select buy_lesson_seq, a.lesson_seq, lesson_refund_flag, a.in_user_id, a.in_date, a.class_account_flag,lesson_category_seq,lesson_title,lesson_price, b.in_user_id as trainer_id
		from buy_lesson a, lesson b
		where a.lesson_seq = b.lesson_seq(+) 
		order by in_date desc
		) c , lesson_category d
		where c.lesson_category_seq = d.lesson_category_seq
		and lesson_refund_flag = 'N'
		and trainer_id = #{memberId}
        and TO_CHAR(IN_DATE, 'YYYYMM') = #{selDate}
		)
		group by lesson_title, lesson_price, round(to_number(lesson_price * 0.8),-2)
        )
        )
	</select>
	
	<select id="selectMyInfo" resultType="egovMap">
	    select a.member_id, a.member_name, a.member_mobile, a.member_height,a.member_weight,
		b.trainer_gym, b.trainer_award,b.trainer_career 
		from member a, trainer b
		where member_id = #{memberId}
		and 
		a.member_id = b.in_user_id(+)
	</select>
	
	<update id="updateMyInfo" parameterType="processVO">
			update trainer 
			set trainer_gym = #{trainerGym},
			trainer_award=#{trainerAward},
			trainer_career=#{trainerCareer}
			where in_user_id = #{memberId}
	</update>
	
</mapper>
