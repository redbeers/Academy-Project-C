<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.profit.mapper.MemberMapper">

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="MemberVO">
        <![CDATA[
        insert into MEMBER(
        	MEMBER_ID, MEMBER_PWD, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_MOBILE,
        	MEMBER_GENDER, MEMBER_HEIGHT, MEMBER_WEIGHT, MEMBER_EMAIL, MEMBER_GUBUN, MEMBER_ROUTE, FILE_SEQ,
        	IN_USER_ID, IN_DATE, UP_USER_ID, UP_DATE
        ) values (
        	#{memberId}, 
        	#{memberPwd}, 
        	#{memberName}, 
        	#{memberNickname}, 
        	#{memberMobile},
        	#{memberGender}, 
        	#{memberHeight}, 
        	#{memberWeight}, 
        	#{memberEmail}, 
        	'U', 
        	'U', 
        	'1',
        	#{memberId}, 
        	sysdate,
        	#{memberId}, 
        	sysdate
        )
        ]]>
	</insert>

	<!-- 카카오 회원가입 -->
	<insert id="kakaoInsertMember" parameterType="MemberVO">
        <![CDATA[
        insert into MEMBER(
        	MEMBER_ID, MEMBER_PWD, MEMBER_NAME, MEMBER_NICKNAME,
        	MEMBER_EMAIL, MEMBER_GUBUN, MEMBER_ROUTE, FILE_SEQ
        	
        ) values (
        	#{memberId, jdbcType=VARCHAR}, 
        	#{memberPwd, jdbcType=VARCHAR}, 
        	#{memberName, jdbcType=VARCHAR}, 
        	#{memberNickname, jdbcType=VARCHAR}, 
        	#{memberEmail, jdbcType=VARCHAR}, 
        	'U', 
        	'K', 
        	123
        	
        )
        ]]>
	</insert>

	<!-- 이미 카카오 로그인 회원인지 아닌지 검사 -->
	<select id="kakaoSelectById" parameterType="String"
		resultType="int">
		select count(*)
		from MEMBER
		where MEMBER_ID = #{memberId} and
		MEMBER_ROUTE = 'K'
	</select>

	<!-- 아이디 중복 검사 -->
	<select id="selectMemberIdCheck" parameterType="String"
		resultType="int">
		select count(*) from MEMBER where MEMBER_ID = #{memberId}
	</select>

	<!-- 닉네임 중복 검사 -->
	<select id="selectMemberNicknameCheck" parameterType="String"
		resultType="int">
		select count(*) from MEMBER where MEMBER_NICKNAME = #{memberNickname}
	</select>

	<!-- 이메일 중복 검사 -->
	<select id="selectMemberEmailCheck" parameterType="String"
		resultType="int">
		select count(*) from MEMBER where MEMBER_EMAIL = #{memberEmail}
	</select>


	<!-- 로그인처리 -->
	<select id="selectMemberCount" parameterType="MemberVO"
		resultType="MemberVO">
		select MEMBER_ID as memberId, MEMBER_NICKNAME as memberNickname,
		MEMBER_GUBUN as memberGubun
		from MEMBER
		where MEMBER_ID = #{memberId} and MEMBER_PWD = #{memberPwd}
	</select>


	<!-- 아이디 찾기 -->
	<select id="selectByFindId" parameterType="MemberVO"
		resultType="string">
		select member_id
		from member
		where member_name =
		#{memberName}
		and member_email = #{memberEmail}
		and member_route = 'U'
	</select>

	<!-- 비밀번호 찾기 -->
	<select id="selectByFindPwd" parameterType="MemberVO"
		resultType="int">
		select count(*)
		from member
		where member_id = #{memberId}
		and member_email = #{memberEmail}
		and member_route = 'U'
	</select>

	<!-- 임시비밀번호로 update -->
	<update id="updateTempPwd" parameterType="MemberVO">
		update member
		set member_pwd = #{memberPwd}
		where member_id = #{memberId}
	</update>


</mapper>